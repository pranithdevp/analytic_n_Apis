// Middleware to log visits
app.use((req, res, next) => {
    const ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;
    const geo = geoip.lookup(ip);
    const country = geo ? geo.country : 'Unknown';
    const referrer = req.get('Referrer') || 'Direct';
    const currentDate = new Date();

    const visit = { ip, referrer, country, date: currentDate };

    let sql = 'INSERT INTO visits SET ?';
    db.query(sql, visit, (err, result) => {
        if (err) throw err;
        next();
    });
});

// Endpoint to get the domain overview
app.get('/analytics', (req, res) => {
    // Overall traffic
    let overallScoreQuery = 'SELECT COUNT(*) as totalVisits FROM visits';
    let organicTrafficQuery = 'SELECT COUNT(*) as organicTraffic FROM visits WHERE referrer != "Direct"';
    let paidTrafficQuery = 'SELECT COUNT(*) as paidTraffic FROM visits WHERE referrer LIKE "%ads%"';
    let backlinksQuery = 'SELECT COUNT(DISTINCT referrer) as backlinks FROM visits WHERE referrer != "Direct"';

    let distributionQuery = 'SELECT country, COUNT(*) as visits FROM visits GROUP BY country';
    let monthlyTrafficQuery = SELECT COUNT(*) as traffic, MONTH(date) as month, YEAR(date) as year
                                FROM visits 
                                WHERE date >= NOW() - INTERVAL 1 YEAR
                                GROUP BY YEAR(date), MONTH(date);

    let results = {};

    // Execute all queries and combine the results
    db.query(overallScoreQuery, (err, overallResult) => {
        if (err) throw err;
        results.totalVisits = overallResult[0].totalVisits;

        db.query(organicTrafficQuery, (err, organicResult) => {
            if (err) throw err;
            results.organicTraffic = organicResult[0].organicTraffic;

            db.query(paidTrafficQuery, (err, paidResult) => {
                if (err) throw err;
                results.paidTraffic = paidResult[0].paidTraffic;

                db.query(backlinksQuery, (err, backlinksResult) => {
                    if (err) throw err;
                    results.backlinks = backlinksResult[0].backlinks;

                    db.query(distributionQuery, (err, distributionResult) => {
                        if (err) throw err;
                        results.distributionByCountry = distributionResult;

                        db.query(monthlyTrafficQuery, (err, monthlyResult) => {
                            if (err) throw err;
                            results.monthlyTraffic = monthlyResult;

                            res.json(results); // Return all analytics data
                        });
                    });
                });
            });
        });
    });
});

app.listen(3000, () => {
    console.log('Server running on port 3000');
});

Note:
Database Schema:

visits table structure:
id (int, primary key),
ip (varchar),
referrer (varchar),
country (varchar),
date (datetime).
Overall Score:

This is the total number of visits to the site (totalVisits).
Organic & Paid Traffic:
